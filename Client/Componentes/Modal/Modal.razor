@inject NavigationManager NavigationManager;

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@message</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="() => Close()">Fechar</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {


    [Parameter] public string message { get; set; }
    [Parameter] public string title { get; set; }

    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    private string urlRedirect = "";


    /// <summary> Método para abrir o modal.
    /// </summary>
    /// <param name="message">mensagem que será exibida no modal.</param>
    /// <param name="title"> título do modal.</param>
    /// <param name="urlRedirect"> link para aonde o usúario será redirecionado ao clicar em fechar.</param>
    ///
    public void Open(string message = "", string title = "",string urlRedirect = "")
    {
        this.message = message;
        this.title = title;
        this.urlRedirect = urlRedirect;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        NavigationManager.NavigateTo(urlRedirect);
        StateHasChanged();
    }
}