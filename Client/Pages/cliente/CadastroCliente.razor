@page "/CadastroCliente"
@page "/CadastroCliente/{codCliente}"
@inject IJSRuntime jsRuntime
@using System.Text
@using Negocio.Cadastro
@using Projeto_Contabilidade.Client.Pages.cliente
@using Projeto_Contabilidade.Client.Componentes.Steper
@using Projeto_Contabilidade.Client.Componentes.Input

<div class="card">
    <h4 class="card-header">Cadastro de Cliente</h4>
    <div class="card-body">
        <EditForm Model="vmCliente">
            <Steper>
                <Step Text="Informações Gerais" Icon="oi-info" Value="Step1" Enabled="@IsEnabled">
                    <div class="form__div">
                        <h3 class="form__title">
                            Informações Gerais
                        </h3>
                        <div class="form__inputs">
                            <div class="field__control">
                                <label>Nome</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Nome_Cliente"></InputText>
                            </div>
                            <div class="field__control">
                                <label>CNPJ</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Cnpj"></InputText>
                            </div>
                            <div class="field__control">
                                <label>E-Mail</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Email"></InputText>
                            </div>
                            <div class="field__control">
                                <label>IE</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Ie"></InputText>
                            </div>
                        </div>
                    </div>
                </Step>
                <Step Text="Informações de Endereço" Icon="oi-location" Value="Step2" Enabled="@IsEnabled">
                    <div class="form__div">
                        <h3 class="form__title">
                            Informações De Endereço
                        </h3>
                        <div class="form__inputs">
                            <div class="field__control">
                                <label>Rua</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Rua"></InputText>
                            </div>
                            <div class="field__control">
                                <label>Número</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Numero"></InputText>
                            </div>
                            <div class="field__control">
                                <label>Bairro</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Bairro"></InputText>
                            </div>
                            <div class="field__control">
                                <label>CEP</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Cep"></InputText>
                            </div>
                            <div class="field__control">
                                <label>Cidade</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Nome_Cidade"></InputText>
                            </div>
                            <div class="field__control">
                                <label>UF</label>
                                <InputText class="field__input field__input--active" @bind-Value="vmCliente.Uf"></InputText>
                            </div>
                        </div>
                    </div>
                </Step>
            </Steper>
            <div class="form__buttons">
                <button @onclick="Excluir" class="button button--normal button--delete">
                    Excluir
                </button>
                <button @onclick="LimparTelaCliente" class="button button--normal button--action">
                    Limpar
                </button>
                <button @onclick="CadastrarCliente" class="button button--normal button--action">
                    Gravar
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    public bool IsEnabled = true;

    [Parameter] public string codCliente { get; set; }
    ClienteViewModel vmCliente = new ClienteViewModel();
    //Não é necessário instânciar  a vmCidade pois a cidade está dentro da vmCliente, instânciada.
    // VmCidade vmCidade = new VmCidade();
    private bool loading;
    private string error;
    private bool editando = false;
    private Cliente editarCliente = null;

    protected override async Task OnInitializedAsync()
    {
        // await CadastrarCliente();
    }

    public Cliente Editar
    {
        get
        {
            return editarCliente;
        }
        set
        {
            vmCliente.Nome_Cliente = editarCliente.nome_Cliente;
            vmCliente.Cnpj = editarCliente.cnpj;
            vmCliente.Email = editarCliente.email;
            vmCliente.Ie = editarCliente.ie;
            vmCliente.Cep = editarCliente.cep;
            vmCliente.Uf = editarCliente.uf;
            vmCliente.Bairro = editarCliente.bairro;
            vmCliente.Rua = editarCliente.rua;
            vmCliente.Numero = editarCliente.numero;
            vmCliente.Nome_Cidade = editarCliente.nome_Cidade;
        }
    }

    private async Task CadastrarCliente()
    {
        try
        {
            string url = $"Cliente/Gravar";
            HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Post, url);
            string jsonCorpo = System.Text.Json.JsonSerializer.Serialize(vmCliente);
            requestMessage.Content = new StringContent(jsonCorpo, Encoding.UTF8, "application/json");

            //Ver essa parte, uso e instãncia.
            var response = new HttpResponseMessage();
            var resposta = response.RequestMessage.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode == true)
            {
                //Verificar no blazor como usar o retorno de mensagem sem usando requestMessage
                throw new HttpRequestException($"Cliente gravado com sucesso");
                //Console.WriteLine("Cliente gravado com sucesso");

                LimparTelaCliente();
                editando = false;
                StateHasChanged();

            }
            else
            {
                throw new InvalidOperationException("Erro ao gravar o Cliente.");
            }
        }
        catch (InvalidOperationException ex)
        {
            throw new InvalidOperationException(ex.Message);
        }
    }

    private async Task Excluir()
    {
        try
        {
            string url = $"Cliente/Excluir";
            HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Delete, url);
            string jsonCorpo = System.Text.Json.JsonSerializer.Serialize(vmCliente); ;
            requestMessage.Content = new StringContent(jsonCorpo, Encoding.UTF8, "application/json");
            var response = new HttpResponseMessage();
            var resposta = response.RequestMessage.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                throw new HttpRequestException($"Cliente excluído com sucesso");
                LimparTelaCliente();
                editando = false;
                StateHasChanged();

            }
        }
        catch (InvalidOperationException ex)
        {
            throw new InvalidOperationException(ex.Message);
        }
    }

    public void LimparTelaCliente()
    {
        vmCliente.Nome_Cliente = "";
        vmCliente.Cnpj = "";
        vmCliente.Ie = "";
        vmCliente.Email = "";
        vmCliente.Rua = "";
        vmCliente.Numero = "";
        vmCliente.Bairro = "";
        vmCliente.Cep = "";
        vmCliente.Uf = "";
        vmCliente.Nome_Cidade = "";
    }

}
