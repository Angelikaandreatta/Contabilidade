@layout LoginLayout
@page "/"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using Projeto_Contabilidade.Client.Componentes.Modal

<div style="flex:1; height:100vh; " class="d-flex justify-content-center align-items-center">
    <EditForm style="width:500px" Model=@vmLogin>
        <div class="pb-4">
            <h2 class="font-weight-bold title_montserrat">Bem vindo(a)</h2>
            <span class="text-secondary">Insira suas credenciais para acessar o sistema</span>
        </div>
        <div class="field__control w-100">
            <label>Usuario</label>
            <InputText class="field__input" @bind-Value="@vmLogin.Usuario" />
        </div>
        <div class="field__control w-100 mt-2 mb-2">
            <label>Empresa</label>
            <InputSelect class="field__input" @bind-Value="@empresa">
                <option value="1">Empresa 1</option>
                <option value="2">Empresa 2</option>
            </InputSelect>
        </div>
        <div class="field__control w-100">
            <label>Senha</label>
            <InputText class="field__input" type="password" @bind-Value="@vmLogin.Password" />
            <a href="#" class="text-secondary text-right">Esqueci minha senha</a>
        </div>
        <div class="d-flex flex-column w-100 mt-4">
            <button @onclick="ValidateLogin" class="btn btn-primary">Entrar</button>
            <button class="btn">Criar Conta</button>
        </div>
    </EditForm>

    <div class=h-100>
    </div>
</div>

<Modal @ref=modal></Modal>
@code {
    private LoginViewModel vmLogin = new LoginViewModel();
    private string empresa { get; set; } = "1";
    Modal modal = new Modal();
    public async Task ValidateLogin()
    {
        if(vmLogin.Usuario == "Administrador" && vmLogin.Password == "Admin1234")
        {
            await JSRuntime.InvokeAsync<string>("blazorExtensions.WriteCookieAutenticated", "true");
            await WriteCookieASync();
            modal.Open("Logado com sucesso", "Login", "/index");
            StateHasChanged();
        }
        else
        {
            await JSRuntime.InvokeAsync<string>("blazorExtensions.WriteCookieAutenticated", "false");
            modal.Open("Erro ao logar", "Login", "/");
            StateHasChanged();
        }
    }

    public async Task WriteCookieASync()
    {
        await JSRuntime.InvokeAsync<string>("blazorExtensions.WriteCookieEmpresa", "empresa", empresa);
    }
}
